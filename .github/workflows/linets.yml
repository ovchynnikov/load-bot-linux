name: üìù Linters
on:
  push:
    branches:
      - '*'
    paths:
      - 'src/**'
      - '!README.md'
      - '!.env.example'
  pull_request:
    branches:
      - '*'

jobs:
  lint-python:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Check out repository code
        uses: actions/checkout@v5
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r src/requirements.txt
      - name: Install linters
        run: |
          python -m pip install pylint black
      - name: Lint Python code with black
        run: |
          black --check --diff --skip-string-normalization --line-length 120 src/
      - name: Lint Python code with Pylint
        run: |
          cd src/
          pylint --disable=R,C,W1203,W0105 .

  lint-docker:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v5
      - name: Lint Dockerfile with hadolint
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile
          failure-threshold: error
          ignore: DL3008

  lint-json:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5
      - name: Install jq
        run: sudo apt-get install -y jq
      - name: Lint JSON Files
        run: |
          EXIT_CODE=0
          for file in $(find . -type f -name "*.json"); do
            jq empty "$file" || EXIT_CODE=1
          done
          exit $EXIT_CODE
